@page "/fetchdata"
@using DFBlazor.State
@inject IDispatcher dispatcher
@inject IState<WeatherState> weather
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>DF:Weather Forecast</PageTitle>

@using DFBlazor.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (weather.Value.IsLoading)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in weather.Value.Forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override void OnInitialized(){
        base.OnInitialized();
        dispatcher.Dispatch(new FetchWeatherAction());
    }
}
